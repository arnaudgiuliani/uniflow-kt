/*
 * Copyright 2019-2021 Arnaud Giuliani
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'maven-publish'
apply plugin: 'signing'

//def isReleaseBuild() {
//    return "$is_snapshot" == "false"
//}

def getRepositoryUsername() {
    return findProperty('SONATYPE_NEXUS_USERNAME') ?: System.getenv('SONATYPE_NEXUS_USERNAME') ?: ""
}

def getRepositoryPassword() {
    return findProperty('SONATYPE_NEXUS_PASSWORD') ?: System.getenv('SONATYPE_NEXUS_PASSWORD') ?: ""
}

if (!project.tasks.findByName('sourcesJar')) {
    task sourcesJar(type: Jar) {
        archiveClassifier.set('sources')
        if (pluginManager.hasPlugin('com.android.library')) {
            from android.sourceSets.main.java.srcDirs
        } else {
            from sourceSets.main.java.srcDirs
        }
    }
}

artifacts {
    archives dokkaJar
    archives sourcesJar
}

afterEvaluate {
    publishing {
        repositories {
            maven {
                name "snapshot"
                url = "https://oss.sonatype.org/content/repositories/snapshots"
                credentials {
                    username = getRepositoryUsername()
                    password = getRepositoryPassword()
                }
            }
            maven {
                name "staging"
                url = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
                credentials {
                    username = getRepositoryUsername()
                    password = getRepositoryPassword()
                }
            }
        }

        if (!pluginManager.hasPlugin('org.jetbrains.kotlin.multiplatform')) {
            publications {
                release(MavenPublication) {
                    if (pluginManager.hasPlugin('com.android.library')) {
                        from components.release
                    } else {
                        from components.java
                    }
                    artifact sourcesJar
                    artifactId = project.name
                }
            }
        }

        publications.all {
            artifact dokkaJar

            pom.withXml {
                def root = asNode()

                root.children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST

                    description "Uniflow - Simple Unidirectionnel Data Flow for Android & Kotlin, using Kotlin coroutines and open to functional programming"
                    name project.name
                    url "https://github.com/uniflow-kt/uniflow-kt"
                    licenses {
                        license {
                            name "The Apache Software License, Version 2.0"
                            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
                        }
                    }
                    scm {
                        url "https://github.com/uniflow-kt/uniflow-kt"
                        connection "scm:git:git://github.com/uniflow-kt/uniflow-kt.git"
                        developerConnection "scm:git:git://github.com/uniflow-kt/uniflow-kt.git"
                    }
                    developers {
                        developer {
                            id "arnaudgiuliani"
                            name "Arnaud Giuliani"
                        }
                    }
                }
            }
        }
    }

    signing {
        if (pluginManager.hasPlugin('org.jetbrains.kotlin.multiplatform')) {
            publishing.publications.all {
                sign it
            }
        } else {
            sign publishing.publications.release
        }
    }
}